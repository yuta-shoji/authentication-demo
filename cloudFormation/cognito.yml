AWSTemplateFormatVersion: 2010-09-09
Parameters:
  UserPoolName:
    Type: String
  Domain:
    Type: String

Resources:
  # User Pool Configuration
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      # General
      UserPoolName: !Ref UserPoolName
      UsernameConfiguration:
        CaseSensitive: false

      # Sign in Experience
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
      MfaConfiguration: 'OFF'
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1

      # Sign up Experience
      AutoVerifiedAttributes:
        - email
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate:
          - email
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
        - Name: company
          AttributeDataType: String
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true

  CognitoAdminUserPoolGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId: !Ref CognitoUserPool
      GroupName: ADMIN
      Description: 開発者
      Precedence: 0

  CognitoManagerUserPoolGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId: !Ref CognitoUserPool
      GroupName: MANAGER
      Description: 管理者
      Precedence: 0

  CognitoEmployeeUserPoolGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId: !Ref CognitoUserPool
      GroupName: EMPLOYEE
      Description: 従業員
      Precedence: 0

  CognitoTestUserPoolGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId: !Ref CognitoUserPool
      GroupName: TEST
      Description: テストユーザー
      Precedence: 0

  # Cognito Domain Configuration
  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    DependsOn: CognitoUserPool
    Properties:
      UserPoolId:
        Ref: CognitoUserPool
      Domain: !Ref Domain

  # User Pool Client Configuration
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn: "CognitoUserPoolDomain"
    Properties:
      # General
      UserPoolId:
        Ref: CognitoUserPool
      ClientName: yuta-dev-cognito-client
      GenerateSecret: true
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      AuthSessionValidity: 3
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days
      AccessTokenValidity: 60
      IdTokenValidity: 60
      RefreshTokenValidity: 30
      EnableTokenRevocation: true
      PreventUserExistenceErrors: 'ENABLED'
      AllowedOAuthFlowsUserPoolClient: true

      # Hosted UI
      EnablePropagateAdditionalUserContextData: false
      CallbackURLs:
        - http://localhost:8080/login/oauth2/code/cognito
      SupportedIdentityProviders:
        - COGNITO
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - aws.cognito.signin.user.admin
        - email
        - openid
        - phone

Outputs:
  UserPoolId:
    Value: !Ref CognitoUserPool
    Description: ID of the Cognito User Pool
  UserPoolClientId:
    Value: !Ref CognitoUserPoolClient
    Description: ID of the Cognito User Pool Client
  CognitoDomain:
    Value: !Sub https://${CognitoUserPoolDomain}.auth.${AWS::Region}.amazoncognito.com
    Description: Cognito Domain URL
